# Development
# server.port=9000
# spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/kaifd
# spring.datasource.username=postgres
# spring.datasource.password=root
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


# Kafka Producer Configuration
# spring.kafka.bootstrap-servers=kafka:9093
# spring.kafka.producer.bootstrap-servers=kafka:9093
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# # Kafka Consumer Configuration
# spring.kafka.consumer.bootstrap-servers=kafka:9093
# spring.kafka.consumer.auto-offset-reset=earliest
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=com.kaif.dockersringboot.entities




# # Production

# spring.datasource.url=jdbc:postgresql://postgres:5432/fasmho
# spring.datasource.username=postgres
# spring.datasource.password=2786
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


# Kafka Producer Configuration
server.port=9000
spring.datasource.url=jdbc:postgresql://postgres:5432/fasmho
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.kafka.bootstrap-servers=kafka:9093
spring.kafka.producer.bootstrap-servers=kafka:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=kafka:9093
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.kaif.dockersringboot.entities


# # test ec2
# server.port=9000
# spring.datasource.url=jdbc:postgresql://postgres:5432/fasmho
# spring.datasource.username=postgres
# spring.datasource.password=2786
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


# # Kafka Producer Configuration
# spring.kafka.bootstrap-servers=kafka:9093
# spring.kafka.producer.bootstrap-servers=kafka:9093
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# # Kafka Consumer Configuration
# spring.kafka.consumer.bootstrap-servers=kafka:9093
# spring.kafka.consumer.auto-offset-reset=earliest
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=com.kaif.dockersringboot.entities